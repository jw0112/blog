{
  "hash": "1f13f4eea24f1a17a621284391e9ad8f",
  "result": {
    "markdown": "---\ntitle: \"Color Scales\"\nauthor: \"Jinwon Lee\"\ndate: \"2023-04-05\"\ncategories: [Visualization, Code, R]\npage-layout: full\nimage: \"RColorBrewser.png\"\noutput:\n  prettydoc::html_pretty:\n    theme: architect\n    highlight: github\neditor_options: \n  chunk_output_type: console\nmainfont: NanumGothic\n---\n\n\n\n\n# 4. Color scales\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# ColorBrewer palettes\nRColorBrewer::display.brewer.all()\n```\n\n::: {.cell-output-display}\n![](Color_Scale_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read csv File\nUS_census <- read.csv(\"../data/US_census.csv\")\nUS_regions <- read.csv(\"../data/US_regions.csv\")\n\nUS_census %>% names()\n#>  [1] \"state\"                                    \n#>  [2] \"name\"                                     \n#>  [3] \"FIPS\"                                     \n#>  [4] \"pop2010\"                                  \n#>  [5] \"pop2000\"                                  \n#>  [6] \"age_under_5\"                              \n#>  [7] \"age_under_18\"                             \n#>  [8] \"age_over_65\"                              \n#>  [9] \"female\"                                   \n#> [10] \"white\"                                    \n#> [11] \"black\"                                    \n#> [12] \"native\"                                   \n#> [13] \"asian\"                                    \n#> [14] \"pac_isl\"                                  \n#> [15] \"two_plus_races\"                           \n#> [16] \"hispanic\"                                 \n#> [17] \"white_not_hispanic\"                       \n#> [18] \"no_move_in_one_plus_year\"                 \n#> [19] \"foreign_born\"                             \n#> [20] \"foreign_spoken_at_home\"                   \n#> [21] \"hs_grad\"                                  \n#> [22] \"bachelors\"                                \n#> [23] \"veterans\"                                 \n#> [24] \"mean_work_travel\"                         \n#> [25] \"housing_units\"                            \n#> [26] \"home_ownership\"                           \n#> [27] \"housing_multi_unit\"                       \n#> [28] \"median_val_owner_occupied\"                \n#> [29] \"households\"                               \n#> [30] \"persons_per_household\"                    \n#> [31] \"per_capita_income\"                        \n#> [32] \"median_household_income\"                  \n#> [33] \"poverty\"                                  \n#> [34] \"private_nonfarm_establishments\"           \n#> [35] \"private_nonfarm_employment\"               \n#> [36] \"percent_change_private_nonfarm_employment\"\n#> [37] \"nonemployment_establishments\"             \n#> [38] \"firms\"                                    \n#> [39] \"black_owned_firms\"                        \n#> [40] \"native_owned_firms\"                       \n#> [41] \"asian_owned_firms\"                        \n#> [42] \"pac_isl_owned_firms\"                      \n#> [43] \"hispanic_owned_firms\"                     \n#> [44] \"women_owned_firms\"                        \n#> [45] \"manufacturer_shipments_2007\"              \n#> [46] \"mercent_whole_sales_2007\"                 \n#> [47] \"sales\"                                    \n#> [48] \"sales_per_capita\"                         \n#> [49] \"accommodation_food_service\"               \n#> [50] \"building_permits\"                         \n#> [51] \"fed_spending\"                             \n#> [52] \"area\"                                     \n#> [53] \"density\"\nUS_regions %>% names()\n#> [1] \"state\"     \"state_abr\" \"region\"    \"division\"\n```\n:::\n\n\n# Figure 4.2\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data\npopgrowth_df <- US_census %>%\n    left_join(US_regions) %>%\n    group_by(region, division, state) %>%\n    summarize(\n        pop2000 = sum(pop2000, na.rm = TRUE),\n        pop2010 = sum(pop2010, na.rm = TRUE),\n        popgrowth = (pop2010 - pop2000) / pop2000,\n        area = sum(area)\n    ) %>%\n    arrange(popgrowth) %>%\n    ungroup() %>%\n    mutate(\n        state = factor(state, levels = state),\n        region = factor(region, levels = c(\"West\", \"South\", \"Midwdst\", \"Northeast\"))\n    )\n#> Joining, by = \"state\"\n#> `summarise()` has grouped output by 'region', 'division'. You can override\n#> using the `.groups` argument.\npopgrowth_df %>% head()\n#> # A tibble: 6 × 7\n#>   region    division           state          pop2000  pop2010 popgrowth   area\n#>   <fct>     <chr>              <fct>            <int>    <int>     <dbl>  <dbl>\n#> 1 <NA>      East North Central Michigan       9938444  9883640  -0.00551 56539.\n#> 2 Northeast New England        Rhode Island   1048319  1052567   0.00405  1034.\n#> 3 South     West South Central Louisiana      4468976  4533372   0.0144  43204.\n#> 4 <NA>      East North Central Ohio          11353140 11536504   0.0162  40861.\n#> 5 Northeast Middle Atlantic    New York      18976457 19378102   0.0212  47126.\n#> 6 South     South Atlantic     West Virginia  1808344  1852994   0.0247  24038.\n```\n:::\n\n\n## Make color vector in order of the state\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4개 지방의 색 지정\nregion_colors <- c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\")\nstate_colors <- region_colors[as.numeric(popgrowth_df$region)]\n\n# 색상을 밝게 또는 어둡게 생성 (음수는 어둡게)\nstate_colors_dark <- colorspace::darken(state_colors, 0.4)\n\nggplot(popgrowth_df, aes(x = state, y = 100 * popgrowth, fill = region)) +\n    geom_col() +\n    scale_y_continuous(\n        name = \"population growth, 2000 to 2010\",\n        labels = scales::percent_format(scale = 1),\n        expand = c(0, 0)\n    ) +\n    scale_fill_manual(values = region_colors) +\n    coord_flip() +\n    theme_light() +\n    theme(\n        panel.border = element_blank(),\n        panel.grid.major.y = element_blank(),\n        axis.title.y = element_blank(),\n        axis.ticks.length = unit(0, \"pt\"),\n        axis.text.y = element_text(size = 10, color = state_colors),\n        legend.position = c(.58, .68),\n        legend.background = element_rect(fill = \"#ffffffb0\")\n    )\n#> Warning: Vectorized input to `element_text()` is not officially supported.\n#> ℹ Results may be unexpected or may change in future versions of ggplot2.\n```\n\n::: {.cell-output-display}\n![](Color_Scale_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n# 예제 - 주민등록 인구 및 세대현황\n- 주민등록 인구 및 세대현황 - 행정안전부 (https://jumin.mois.go.kr/)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read csv File\nkor_202202 <- read.csv(\"../data/202202_주민등록인구및세대현황.csv\")\nkor_202202 %>% head()\n#>            행정구역 행정구역_코드 총인구수  세대수 세대당_인구 남자_인구수\n#> 1       서울특별시     1100000000  9508451 4442586        2.14     4615823\n#> 2 서울특별시 종로구    1111000000   144575   73763        1.96       70092\n#> 3   서울특별시 중구    1114000000   122167   63644        1.92       59446\n#> 4 서울특별시 용산구    1117000000   222413  111134        2.00      106881\n#> 5 서울특별시 성동구    1120000000   285137  134286        2.12      138866\n#> 6 서울특별시 광진구    1121500000   340494  168975        2.02      164226\n#>   여자_인구수 남여_비율\n#> 1     4892628      0.94\n#> 2       74483      0.94\n#> 3       62721      0.95\n#> 4      115532      0.93\n#> 5      146271      0.95\n#> 6      176268      0.93\n\nkor_202202 %>% sapply(class)\n#>      행정구역 행정구역_코드      총인구수        세대수   세대당_인구 \n#>   \"character\"     \"numeric\"     \"numeric\"     \"numeric\"     \"numeric\" \n#>   남자_인구수   여자_인구수     남여_비율 \n#>     \"numeric\"     \"numeric\"     \"numeric\"\nkor_202202$행정구역_코드 <- kor_202202$행정구역_코드 %>% format() # numeric -> character 형으로 변환\n\n# Filter & Select\nkor_202202_use <- kor_202202 %>%\n    filter(substr(행정구역, 1, 2) %in% c(\"서울\", \"대전\", \"대구\", \"부산\")) %>%\n    filter(substr(행정구역_코드, 3, 4) != \"00\") %>% # 시도별 전체 제외 (서울특별시, 대전광역시, 대구광역시, 부산광역시 행 제거)\n    select(행정구역, 총인구수) %>%\n    arrange(총인구수)\nkor_202202_use %>% head()\n#>            행정구역 총인구수\n#> 1   부산광역시 중구    40582\n#> 2   대구광역시 중구    74710\n#> 3   부산광역시 동구    88245\n#> 4   부산광역시 서구   104618\n#> 5 부산광역시 영도구   109991\n#> 6   서울특별시 중구   122167\n\n# `시도` 열 생성\nkor_202202_use$시도 <- sapply(kor_202202_use$행정구역, function(x) strsplit(x, \" \")[[1]][1])\nkor_202202_use$시도 <- factor(kor_202202_use$시도, levels = c(\"서울특별시\", \"대전광역시\", \"대구광역시\", \"부산광역시\"))\n\nkor_202202_use %>% head()\n#>            행정구역 총인구수       시도\n#> 1   부산광역시 중구    40582 부산광역시\n#> 2   대구광역시 중구    74710 대구광역시\n#> 3   부산광역시 동구    88245 부산광역시\n#> 4   부산광역시 서구   104618 부산광역시\n#> 5 부산광역시 영도구   109991 부산광역시\n#> 6   서울특별시 중구   122167 서울특별시\n\nkor_202202_use %>% summary()\n#>    행정구역            총인구수              시도   \n#>  Length:54          Min.   : 40582   서울특별시:25  \n#>  Class :character   1st Qu.:207148   대전광역시: 5  \n#>  Mode  :character   Median :305946   대구광역시: 8  \n#>                     Mean   :309033   부산광역시:16  \n#>                     3rd Qu.:407067                  \n#>                     Max.   :661452\n```\n:::\n\n\n## Make color vector in order of the city\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4개 지역의 색 지정\nregion_colors <- c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\")\n\n# ColorBrewer palettes\n# region_colors <- RColorBrewer::brewer.pal(4, 'Set2')\nstate_colors <- region_colors[as.numeric(kor_202202_use$시도)]\nstate_colors_dark <- colorspace::darken(state_colors, 0.4)\n\nggplot(popgrowth_df, aes(x = state, y = 100 * popgrowth, fill = region)) +\n    geom_col() +\n    scale_y_continuous(\n        name = \"총인구수, 2022년 2월\",\n        expand = c(0, 0),\n        labels = scales::comma\n    ) +\n    scale_x_discrete(aes(color = state_colors)) +\n    scale_color_manual(values = state_colors) +\n    scale_fill_manual(values = region_colors) +\n    coord_flip() +\n    theme_light() +\n    theme(\n        panel.border = element_blank(),\n        panel.grid.major.y = element_blank(),\n        axis.title.y = element_blank(),\n        axis.ticks.length = unit(0, \"pt\"),\n        axis.text.y = element_text(size = 10, color = state_colors_dark),\n        legend.position = c(.58, .68),\n        legend.background = element_rect(fill = \"#ffffffb0\")\n    )\n#> Warning: Vectorized input to `element_text()` is not officially supported.\n#> ℹ Results may be unexpected or may change in future versions of ggplot2.\n```\n\n::: {.cell-output-display}\n![](Color_Scale_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Color_Scale_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}