{
  "hash": "7862485214b5a95f4c032fbb7ea8f098",
  "result": {
    "markdown": "---\ntitle: \"NCDC Normals with ggplot2\"\nauthor: \"Jinwon Lee\"\ndate: \"2023-03-22\"\ncategories: [Visualization, Code, R]\npage-layout: full\nimage: \"NCDC_normals.png\"\noutput:\n  prettydoc::html_pretty:\n    theme: architect\n    highlight: github\neditor_options: \n  chunk_output_type: console\nmainfont: NanumGothic\n---\n\n\n## NCDC normals 데이터를 활용한 `ggplot2` 실습\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read csv File\nncdc_normals <- read.csv(\"../data/ncdc_normals.csv\")\nncdc_normals %>% head()\n#>    station_id month day temperature flag       date\n#> 1 AQW00061705     1   1        82.4    C 0000-01-01\n#> 2 AQW00061705     1   2        82.4    C 0000-01-02\n#> 3 AQW00061705     1   3        82.4    C 0000-01-03\n#> 4 AQW00061705     1   4        82.4    C 0000-01-04\n#> 5 AQW00061705     1   5        82.4    C 0000-01-05\n#> 6 AQW00061705     1   6        82.4    C 0000-01-06\n\nncdc_normals %>% dim()\n#> [1] 2745366       6\n\nncdc_normals %>% summary()\n#>   station_id            month             day         temperature    \n#>  Length:2745366     Min.   : 1.000   Min.   : 1.00   Min.   :-21.80  \n#>  Class :character   1st Qu.: 4.000   1st Qu.: 8.00   1st Qu.: 39.70  \n#>  Mode  :character   Median : 7.000   Median :16.00   Median : 54.60  \n#>                     Mean   : 6.514   Mean   :15.76   Mean   : 53.17  \n#>                     3rd Qu.:10.000   3rd Qu.:23.00   3rd Qu.: 68.10  \n#>                     Max.   :12.000   Max.   :31.00   Max.   :103.20  \n#>      flag               date          \n#>  Length:2745366     Length:2745366    \n#>  Class :character   Class :character  \n#>  Mode  :character   Mode  :character  \n#>                                       \n#>                                       \n#> \n\nncdc_normals %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\" \"character\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# `date`열 Datetime type으로 변환\nncdc_normals$date <- ncdc_normals$date %>% as.Date(\"%Y-%m-%d\")\nncdc_normals$date %>% head()\n#> [1] \"0000-01-01\" \"0000-01-02\" \"0000-01-03\" \"0000-01-04\" \"0000-01-05\"\n#> [6] \"0000-01-06\"\n\nncdc_normals %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\"      \"Date\"\n\nncdc_normals %>% sapply(typeof)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"    \"double\" \"character\"    \"double\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# station 개수 확인\nncdc_normals$station_id %>%\n    unique() %>%\n    length()\n#> [1] 7501\n\n# station_loc Dataframe 생성\nstation_loc <- data.frame(\n    station_id = c(\"USW00014819\", \"USC00042319\", \"USW00093107\", \"USW00012918\"),\n    location = c(\"Chicago\", \"Death Valley\", \"San Diego\", \"Houston\")\n)\nstation_loc\n#>    station_id     location\n#> 1 USW00014819      Chicago\n#> 2 USC00042319 Death Valley\n#> 3 USW00093107    San Diego\n#> 4 USW00012918      Houston\n\n# Raw Data와 Inner Join\ntemps_long <- ncdc_normals %>% inner_join(station_loc, by = \"station_id\")\ntemps_long %>% head()\n#>    station_id month day temperature flag       date     location\n#> 1 USC00042319     1   1        51.0    S 0000-01-01 Death Valley\n#> 2 USC00042319     1   2        51.2    S 0000-01-02 Death Valley\n#> 3 USC00042319     1   3        51.3    S 0000-01-03 Death Valley\n#> 4 USC00042319     1   4        51.4    S 0000-01-04 Death Valley\n#> 5 USC00042319     1   5        51.6    S 0000-01-05 Death Valley\n#> 6 USC00042319     1   6        51.7    S 0000-01-06 Death Valley\n\ntemps_long %>% sapply(class)\n#>  station_id       month         day temperature        flag        date \n#> \"character\"   \"integer\"   \"integer\"   \"numeric\" \"character\"      \"Date\" \n#>    location \n#> \"character\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# X축에 표시할 눈금\ndate_s <- \"0000-01-01\" %>% as.Date(\"%Y-%m-%d\")\ndate_e <- \"0001-01-01\" %>% as.Date(\"%Y-%m-%d\")\nbreak_date <- seq.Date(date_s, date_e, by = \"3 month\") # 3달 간격 Date 생성\n\n# ggplot + 축 설정\nggplot(temps_long, aes(x = date, y = temperature, color = location)) +\n    geom_line(linewidth = 1) +\n    scale_x_date(\n        name = \"month\", breaks = break_date,\n        labels = c(\"Jan\", \"Apr\", \"Jul\", \"Oct\", \"Jan\")\n    ) +\n    scale_y_continuous(name = \"temp\") + # limits = c(0, 100) -> y 범위 지정\n    labs(title = \"Fig. 2.3\", subtitle = \"Daily temperature normals\") +\n    theme_light()\n```\n\n::: {.cell-output-display}\n![](NCDC_normals_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 월 평균\nmean_temps <- temps_long %>%\n    group_by(location, month) %>%\n    summarize(mean = mean(temperature)) %>%\n    ungroup() %>%\n    mutate(month = factor(paste(month), levels = paste(1:12)))\n#> `summarise()` has grouped output by 'location'. You can override using the\n#> `.groups` argument.\nmean_temps\n#> # A tibble: 48 × 3\n#>    location month  mean\n#>    <chr>    <fct> <dbl>\n#>  1 Chicago  1      24.8\n#>  2 Chicago  2      28.9\n#>  3 Chicago  3      38.8\n#>  4 Chicago  4      50.4\n#>  5 Chicago  5      60.9\n#>  6 Chicago  6      71.0\n#>  7 Chicago  7      75.8\n#>  8 Chicago  8      74.1\n#>  9 Chicago  9      66.4\n#> 10 Chicago  10     54.3\n#> # … with 38 more rows\n\n# ggplot + geom_tile + fill_color\nggplot(mean_temps, aes(x = month, y = location, fill = mean)) +\n    geom_tile(width = .95, height = .95) +\n    scale_fill_viridis_c(\n        option = \"B\", begin = 0.15, end = 0.98,\n        name = \"temperature\"\n    ) +\n    coord_fixed(expand = FALSE) +\n    ylab(NULL)\n```\n\n::: {.cell-output-display}\n![](NCDC_normals_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "NCDC_normals_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}